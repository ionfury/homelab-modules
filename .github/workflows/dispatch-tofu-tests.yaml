---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Dispatch Tofu Tests

on:
  issue_comment:
    types: [created]

jobs:
  detect-changed-modules:
    if: >
      github.event.issue.pull_request != null &&
      startsWith(github.event.comment.body, '/test') &&
      github.event.comment.author_association == 'OWNER'
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.detect.outputs.modules }}
    steps:
      - name: Get PR info
        id: pr
        uses: actions/github-script@v6
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.issue.number
            });
            core.setOutput("head_ref", pr.data.head.ref);
            core.setOutput("base_ref", pr.data.base.ref);

      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.pr.outputs.head_ref }}
          fetch-depth: 0

      - name: Fetch base branch
        run: git fetch origin ${{ steps.pr.outputs.base_ref }}:${{ steps.pr.outputs.base_ref }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Detect changed modules
        id: detect
        run: |
          MODULES=$(git diff --name-only origin/${{ steps.pr.outputs.base_ref }}...HEAD \
            | grep '^modules/' \
            | cut -d/ -f2 \
            | sort -u \
            | jq -R -s -c 'split("\n")[:-1]')
          echo "modules=$MODULES" >> $GITHUB_OUTPUT

  dispatch-tests:
    needs: detect-changed-modules
    if: ${{ needs.detect-changed-modules.outputs.modules != '[]' }}
    strategy:
      matrix:
        module: ${{ fromJson(needs.detect-changed-modules.outputs.modules) }}
    uses: ./.github/workflows/tofu-test.yaml
    with:
      module: ${{ matrix.module }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}