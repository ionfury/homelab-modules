---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Tofu Test

on:
  workflow_dispatch:
    inputs:
      head_ref:
        description: 'Pull request head ref'
        required: true
      base_ref:
        description: 'Pull request base branch'
        required: true
      head_sha:
        description: 'Commit head sha'
        required: true

jobs:
  start-check:
    runs-on: ubuntu-latest
    outputs:
      check_id: ${{ steps.new-check.outputs.check_id }}
    steps:
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v4
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}

      - name: Create “test-modules” Check Run
        id: new-check
        uses: LouisBrunner/checks-action@v2
        with:
          token: ${{ steps.get_workflow_token.outputs.token }}
          name: test-modules
          sha: ${{ github.event.inputs.head_sha }}
          status: in_progress
          details_url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  changed-modules:
    needs: start-check
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.detect.outputs.modules }}
    steps:
      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.head_ref }}
          fetch-depth: 0

      - name: Fetch base branch
        run: git fetch origin ${{ github.event.inputs.base_ref }}

      - name: Detect changed modules
        id: detect
        run: |
          MODULES=$(
            git diff --diff-filter=d --name-only origin/${{ github.event.inputs.base_ref }}...HEAD \
              | grep '^modules/' \
              | grep -v '\.md$' \
              | cut -d/ -f2 \
              | sort -u \
              | jq -R -s -c 'split("\n")[:-1]'
          )
          echo "modules=$MODULES" >> $GITHUB_OUTPUT

  build-matrix:
    needs: changed-modules
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.head_ref }}
          fetch-depth: 0

      - name: Build test-matrix
        id: set-matrix
        run: |
          modules=$(echo '${{ needs.changed-modules.outputs.modules }}' | jq -r '.[]')
          entries=()
          for m in $modules; do
            for f in modules/$m/tests/*.tftest.hcl; do
              [ -e "$f" ] || continue
              name=$(basename "$f" .tftest.hcl)
              entries+=("{\"module\":\"$m\",\"test\":\"$name\"}")
            done
          done
          matrix_json="[$(IFS=,; echo "${entries[*]}")]"
          echo "matrix=$matrix_json" >> $GITHUB_OUTPUT

  test-modules:
    needs: [changed-modules, build-matrix]
    if: ${{ needs.build-matrix.outputs.matrix != '[]' }}
    runs-on: homelab-modules-runner-app
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.build-matrix.outputs.matrix) }}
    steps:
      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.head_ref }}
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Check Tofu Version
        run: tofu --version

      - name: Run Tofu Init
        run: tofu -chdir=modules/${{ matrix.module }} init

      - name: Run Tofu Tests
        run: |
          tofu -chdir=modules/${{ matrix.module }} \
          test -filter=tests/${{ matrix.test }}.tftest.hcl

  complete-check:
    needs: [test-modules, start-check]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v4
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}

      - name: Complete “test-modules” Check Run
        uses: LouisBrunner/checks-action@v2
        with:
          token: ${{ steps.get_workflow_token.outputs.token }}
          check_id: ${{ needs.start-check.outputs.check_id }}
          sha: ${{ github.event.inputs.head_sha }}
          status: completed
          conclusion: ${{ needs['test-modules'].result == 'skipped' && 'success' || needs['test-modules'].result }}
